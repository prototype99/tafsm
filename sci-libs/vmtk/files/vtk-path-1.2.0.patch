diff -ur vmtk-1.2.0/PypeS/pyperun.py vmtk-1.2.0.mod/PypeS/pyperun.py
--- vmtk-1.2.0/PypeS/pyperun.py	2015-06-20 08:15:14.000000000 +0900
+++ vmtk-1.2.0.mod/PypeS/pyperun.py	2015-06-20 09:11:08.000000000 +0900
@@ -44,12 +44,12 @@
 
     newEnviron = {}
 
-    vmtkhome = os.path.dirname(os.path.abspath(__file__))
+    vmtkhome = os.path.dirname(os.path.realpath(os.path.abspath(__file__)))
 
     if vmtkhome.endswith('bin'):
-        vmtkhome = os.path.join(os.path.dirname(os.path.abspath(__file__)),"..")
+        vmtkhome = os.path.join(vmtkhome,"..")
     else:
-        vmtkhome = os.path.join(os.path.dirname(os.path.abspath(__file__)),"..","..","..")
+        vmtkhome = os.path.join(vmtkhome,"..","..","..")
 	
     vtkdir = [el for el in os.listdir(os.path.join(vmtkhome,"lib")) if el.startswith('vtk')][0]
 
diff -ur vmtk-1.2.0/vmtk.py vmtk-1.2.0.mod/vmtk.py
--- vmtk-1.2.0/vmtk.py	2015-06-20 08:15:14.000000000 +0900
+++ vmtk-1.2.0.mod/vmtk.py	2015-06-20 09:27:40.000000000 +0900
@@ -5,49 +5,58 @@
 
 if __name__ == '__main__':
 
-    if sys.platform == 'darwin':
-    	ldEnvironmentVariable = "DYLD_LIBRARY_PATH"
-    
-    elif sys.platform == 'win32':
-    	ldEnvironmentVariable = "PATH"
-    
-    else:
-    	ldEnvironmentVariable = "LD_LIBRARY_PATH"
-    
-    currentEnviron = dict()
-    currentEnviron[ldEnvironmentVariable] = ""
-    currentEnviron["PYTHONPATH"] = ""
-    
-    if os.environ.has_key(ldEnvironmentVariable):
-    	currentEnviron[ldEnvironmentVariable] = os.environ[ldEnvironmentVariable]
-    
-    if os.environ.has_key("PYTHONPATH"):
-    	currentEnviron["PYTHONPATH"] = os.environ["PYTHONPATH"]
-    
-    newEnviron = {}
-    
-    vmtkhome = os.path.dirname(os.path.abspath(__file__))
-    
-    if vmtkhome.endswith('bin'):
-        vmtkhome = os.path.join(os.path.dirname(os.path.abspath(__file__)),"..")
+    if not sys.argv[-1]=="----":
+      if sys.platform == 'darwin':
+      	ldEnvironmentVariable = "DYLD_LIBRARY_PATH"
+      
+      elif sys.platform == 'win32':
+      	ldEnvironmentVariable = "PATH"
+      
+      else:
+      	ldEnvironmentVariable = "LD_LIBRARY_PATH"
+      
+      currentEnviron = dict()
+      currentEnviron[ldEnvironmentVariable] = ""
+      currentEnviron["PYTHONPATH"] = ""
+      
+      if os.environ.has_key(ldEnvironmentVariable):
+      	currentEnviron[ldEnvironmentVariable] = os.environ[ldEnvironmentVariable]
+      
+      if os.environ.has_key("PYTHONPATH"):
+      	currentEnviron["PYTHONPATH"] = os.environ["PYTHONPATH"]
+      
+      newEnviron = {}
+      
+      vmtkhome = os.path.dirname(os.path.realpath(os.path.abspath(__file__)))
+      
+      if vmtkhome.endswith('bin'):
+          vmtkhome = os.path.join(vmtkhome,"..")
+      else:
+          vmtkhome = os.path.join(vmtkhome,"..","..","..")
+      
+      vtkdir = [el for el in os.listdir(os.path.join(vmtkhome,"lib")) if el.startswith('vtk')][0]
+      
+      newEnviron[ldEnvironmentVariable] = os.path.join(vmtkhome,"bin") + os.path.pathsep + \
+      								os.path.join(vmtkhome,"lib",vtkdir) + os.path.pathsep + \
+      								os.path.join(vmtkhome,"lib","vmtk") + os.path.pathsep + \
+      								os.path.join(vmtkhome,"lib","InsightToolkit")
+      
+      os.environ[ldEnvironmentVariable] = newEnviron[ldEnvironmentVariable] + os.path.pathsep + currentEnviron[ldEnvironmentVariable]
+      
+      sys.path.append(os.path.join(vmtkhome,"bin","Python"))
+      sys.path.append(os.path.join(vmtkhome,"lib",vtkdir))
+      sys.path.append(os.path.join(vmtkhome,"lib","vmtk"))
+    
+      try:
+        sys.argv.append("----")
+        os.execv(sys.argv[0], sys.argv)
+      except Exception, exc:
+        print 'Failed re-exec:', exc
+        sys.exit(1)
     else:
-        vmtkhome = os.path.join(os.path.dirname(os.path.abspath(__file__)),"..","..","..")
-    
-    vtkdir = [el for el in os.listdir(os.path.join(vmtkhome,"lib")) if el.startswith('vtk')][0]
-    
-    newEnviron[ldEnvironmentVariable] = os.path.join(vmtkhome,"bin") + os.path.pathsep + \
-    								os.path.join(vmtkhome,"lib",vtkdir) + os.path.pathsep + \
-    								os.path.join(vmtkhome,"lib","vmtk") + os.path.pathsep + \
-    								os.path.join(vmtkhome,"lib","InsightToolkit")
-    
-    os.environ[ldEnvironmentVariable] = newEnviron[ldEnvironmentVariable] + os.path.pathsep + currentEnviron[ldEnvironmentVariable]
-    
-    sys.path.append(os.path.join(vmtkhome,"bin","Python"))
-    sys.path.append(os.path.join(vmtkhome,"lib",vtkdir))
-    sys.path.append(os.path.join(vmtkhome,"lib","vmtk"))
-    
+      sys.argv = sys.argv[:-1]
+
     from vmtk import pypes
-    
     vmtkOptions = ['--help', '--ui', '--file']
     
     if len(sys.argv) > 1 and sys.argv[1] not in vmtkOptions:
